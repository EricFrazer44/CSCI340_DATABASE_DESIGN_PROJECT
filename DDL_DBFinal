CREATE TABLE Supplier (
    Supplier_ID INT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Contact_Number VARCHAR(15) NOT NULL,
    Email VARCHAR(100) NOT NULL
);
CREATE TABLE Inventory (
    Inventory_ID INT PRIMARY KEY,
    Item_Name VARCHAR(100) NOT NULL,
    Quantity DECIMAL(10, 2) NOT NULL CHECK (Quantity >= 0),
    Supplier_ID INT NOT NULL,
    FOREIGN KEY (Supplier_ID) REFERENCES Supplier(Supplier_ID)
);
CREATE TABLE Ingredients (
    Ingredient_ID INT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Type VARCHAR(50) NOT NULL CHECK (Type IN ('Pizza', 'Salad', 'Common')),
    Quantity_In_Stock DECIMAL(10, 2) NOT NULL CHECK (Quantity_In_Stock >= 0)
);
CREATE TABLE Menu (
    Menu_Item_ID INT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Category VARCHAR(50) NOT NULL CHECK (Category IN ('Pizza', 'Beverage', 'Salad')),
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL CHECK (Price >= 0)
);
CREATE TABLE Menu_Item_Sizes (
    Menu_Item_Size_ID INT PRIMARY KEY,
    Menu_Item_ID INT NOT NULL,
    Size VARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL CHECK (Price >= 0),
    FOREIGN KEY (Menu_Item_ID) REFERENCES Menu(Menu_Item_ID)
);
CREATE TABLE Uses (
    Menu_Item_ID INT NOT NULL,
    Ingredient_ID INT NOT NULL,
    Quantity_Required DECIMAL(10, 2) NOT NULL CHECK (Quantity_Required > 0),
    PRIMARY KEY (Menu_Item_ID, Ingredient_ID),
    FOREIGN KEY (Menu_Item_ID) REFERENCES Menu(Menu_Item_ID),
    FOREIGN KEY (Ingredient_ID) REFERENCES Ingredients(Ingredient_ID)
);
CREATE TABLE Beverages (
    Beverage_ID INT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Size VARCHAR(50) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL CHECK (Price >= 0)
);
CREATE TABLE Employees (
    Employee_ID INT PRIMARY KEY,
    First_Name VARCHAR(50) NOT NULL,
    Last_Name VARCHAR(50) NOT NULL,
    Position VARCHAR(50) NOT NULL,
    Salary DECIMAL(10, 2) NOT NULL CHECK (Salary >= 0)
);
CREATE TABLE Customers (
    Customer_ID INT PRIMARY KEY,
    First_Name VARCHAR(50) NOT NULL,
    Last_Name VARCHAR(50) NOT NULL,
    Phone_Number VARCHAR(15) NOT NULL,
    Email VARCHAR(100) NOT NULL
);
CREATE TABLE Orders (
    Order_ID INT PRIMARY KEY,
    Customer_ID INT NOT NULL,
    Employee_ID INT NOT NULL,
    Order_Date DATETIME NOT NULL,
    Total_Amount DECIMAL(10, 2) NOT NULL CHECK (Total_Amount >= 0),
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID),
    FOREIGN KEY (Employee_ID) REFERENCES Employees(Employee_ID)
);
CREATE TABLE Delivery (
    Delivery_ID INT PRIMARY KEY,
    Order_ID INT NOT NULL,
    Address VARCHAR(255) NOT NULL,
    Delivery_Time DATETIME NOT NULL,
    Status VARCHAR(50) NOT NULL,
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID)
);
CREATE TABLE Discounts_and_Promotions (
    Promotion_ID INT PRIMARY KEY,
    Description TEXT NOT NULL,
    Discount_Percentage DECIMAL(5, 2) NOT NULL CHECK (Discount_Percentage >= 0 AND Discount_Percentage <= 100),
    Start_Date DATE NOT NULL,
    End_Date DATE NOT NULL
);




